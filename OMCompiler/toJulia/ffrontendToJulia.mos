
     /*
     *     Automatically generated by generateTranslationTemplate.el
     *     @author Emacs
     */

     setCommandLineOptions("-g=MetaModelica");getErrorString();


      print("Translating FBuiltin into Julia!\n"); getErrorString();
      loadFile("Compiler/FFrontEnd/FBuiltin.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/FFrontEnd/FBuiltin.jl",
      OpenModelica.Scripting.Experimental.toJulia()); getErrorString();
      deleteClass(FBuiltin); getErrorString();

      print("Translating FCore into Julia!\n"); getErrorString();
      loadFile("Compiler/FFrontEnd/FCore.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/FFrontEnd/FCore.jl",
      OpenModelica.Scripting.Experimental.toJulia()); getErrorString();
      deleteClass(FCore); getErrorString();

      print("Translating FExpand into Julia!\n"); getErrorString();
      loadFile("Compiler/FFrontEnd/FExpand.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/FFrontEnd/FExpand.jl",
      OpenModelica.Scripting.Experimental.toJulia()); getErrorString();
      deleteClass(FExpand); getErrorString();

      print("Translating FGraphBuildEnv into Julia!\n"); getErrorString();
      loadFile("Compiler/FFrontEnd/FGraphBuildEnv.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/FFrontEnd/FGraphBuildEnv.jl",
      OpenModelica.Scripting.Experimental.toJulia()); getErrorString();
      deleteClass(FGraphBuildEnv); getErrorString();

      print("Translating FGraphBuild into Julia!\n"); getErrorString();
      loadFile("Compiler/FFrontEnd/FGraphBuild.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/FFrontEnd/FGraphBuild.jl",
      OpenModelica.Scripting.Experimental.toJulia()); getErrorString();
      deleteClass(FGraphBuild); getErrorString();
      print("Translating FGraphDump into Julia!\n"); getErrorString();

      loadFile("Compiler/FFrontEnd/FGraphDump.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/FFrontEnd/FGraphDump.jl",
      OpenModelica.Scripting.Experimental.toJulia()); getErrorString();
      deleteClass(FGraphDump); getErrorString();

      print("Translating FGraph into Julia!\n"); getErrorString();
      loadFile("Compiler/FFrontEnd/FGraph.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/FFrontEnd/FGraph.jl",
      OpenModelica.Scripting.Experimental.toJulia()); getErrorString();
      deleteClass(FGraph); getErrorString();

      print("Translating FGraphStream into Julia!\n"); getErrorString();
      loadFile("Compiler/FFrontEnd/FGraphStream.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/FFrontEnd/FGraphStream.jl",
      OpenModelica.Scripting.Experimental.toJulia()); getErrorString();
      deleteClass(FGraphStream); getErrorString();

      print("Translating FInst into Julia!\n"); getErrorString();
      loadFile("Compiler/FFrontEnd/FInst.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/FFrontEnd/FInst.jl",
      OpenModelica.Scripting.Experimental.toJulia()); getErrorString();
      deleteClass(FInst); getErrorString();

      print("Translating FLookup into Julia!\n"); getErrorString();
      loadFile("Compiler/FFrontEnd/FLookup.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/FFrontEnd/FLookup.jl",
      OpenModelica.Scripting.Experimental.toJulia()); getErrorString();
      deleteClass(FLookup); getErrorString();

      print("Translating FMod into Julia!\n"); getErrorString();
      loadFile("Compiler/FFrontEnd/FMod.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/FFrontEnd/FMod.jl",
      OpenModelica.Scripting.Experimental.toJulia()); getErrorString();
      deleteClass(FMod); getErrorString();

      print("Translating FNode into Julia!\n"); getErrorString();
      loadFile("Compiler/FFrontEnd/FNode.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/FFrontEnd/FNode.jl",
      OpenModelica.Scripting.Experimental.toJulia()); getErrorString();
      deleteClass(FNode); getErrorString();

      print("Translating FResolve into Julia!\n"); getErrorString();
      loadFile("Compiler/FFrontEnd/FResolve.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/FFrontEnd/FResolve.jl",
      OpenModelica.Scripting.Experimental.toJulia()); getErrorString();
      deleteClass(FResolve); getErrorString();

      print("Translating FTraverse into Julia!\n"); getErrorString();
      loadFile("Compiler/FFrontEnd/FTraverse.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/FFrontEnd/FTraverse.jl",
      OpenModelica.Scripting.Experimental.toJulia()); getErrorString();
      deleteClass(FTraverse); getErrorString();

      print("Translating FVisit into Julia!\n"); getErrorString();
      loadFile("Compiler/FFrontEnd/FVisit.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/FFrontEnd/FVisit.jl",
      OpenModelica.Scripting.Experimental.toJulia()); getErrorString();
      deleteClass(FVisit); getErrorString();
